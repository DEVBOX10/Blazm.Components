@page "/remove"


@using Blazm.Components
@using BlazmWebAssemblyDemo.Data
@inject WeatherForecastService ForecastService

<h1>Simple demo</h1>

<p>This is a simple grid demo with paging</p>

<button @onclick="ClearGrid">Remove item</button>

<BlazmGrid Data="forecasts" PageSize="10" Sortable="true" SortField="@nameof(WeatherForecast.Date)" ShowFooter="true">
    <GridColumns>
        <GridColumn CanFilter="true" Field="@nameof(WeatherForecast.Date)" Format="{0:d}" Priority="3" />
        <GridColumn CanFilter="true" Field="@nameof(WeatherForecast.TemperatureC)" HighlightSign="true" Priority="1" Class="alignRight">
            <FooterTemplate>
                @{
                    var temp = context as List<WeatherForecast>;
                }
                @temp.Sum(t => t.TemperatureC)
            </FooterTemplate>
        </GridColumn>
        <GridColumn Field="@nameof(WeatherForecast.TemperatureF)" Priority="2" Class="alignRight">
            <FooterTemplate>
                @{
                    var temp = context as List<WeatherForecast>;
                }
                @temp.Sum(t => t.TemperatureF)
            </FooterTemplate>
        </GridColumn>
        <GridColumn CanFilter="true" Field="@nameof(WeatherForecast.Summary)" Priority="0" />
    </GridColumns>
</BlazmGrid>


@code {
    private List<WeatherForecast> forecasts;
    protected override async Task OnInitializedAsync()
    {
        forecasts = (await ForecastService.GetForecastAsync(DateTime.Now)).Take(2).ToList();
    }

    public async Task ClearGrid()
    {
        forecasts.RemoveAt(0);
    }
}
