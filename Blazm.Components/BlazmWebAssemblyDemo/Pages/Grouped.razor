@page "/grouped"

@using Blazm.Components
@using BlazmWebAssemblyDemo.Data
@inject WeatherForecastService ForecastService

<h1>Grouped demo</h1>

<p>This is a grouped grid demo</p>
<p>By adding the <b>GroupedBy</b> property the grid will be grouped.</p>

<h2>BlazmGrid grouped</h2>

<BlazmGrid GroupBy="d=>d.Summary" Data="forecasts" Sortable="true" SortField="@nameof(WeatherForecast.Date)" ShowFooter="true" ShowGroupFooter="true">
    <GroupHeader>
        <h5>@context</h5>
    </GroupHeader>
    <GridColumns>
        <GridColumn CanFilter="true" Field="@nameof(WeatherForecast.Date)" Format="{0:d}" Priority="3" />
        <GridColumn Field="@nameof(WeatherForecast.TemperatureC)" HighlightSign="true" Priority="1" Class="alignRight">
            <FooterTemplate>
                @{
                    var temp = context as List<WeatherForecast>;
                }
                @temp.Sum(t => t.TemperatureC)
            </FooterTemplate>

            <GroupFooterTemplate>
                @{ //Context contains all the WeatherForecast within the group
                    var temp = context as List<WeatherForecast>;
                }
                @Math.Round(temp.Average(t => t.TemperatureC), 2)
            </GroupFooterTemplate>
        </GridColumn>
        <GridColumn Field="@nameof(WeatherForecast.TemperatureF)" Priority="2" Class="alignRight">
            <FooterTemplate>
                @{
                    var temp = context as List<WeatherForecast>;
                }
                @Math.Round(temp.Average(t => t.TemperatureF), 2)
            </FooterTemplate>
            <GroupFooterTemplate>
                @{
                    var temp = context as List<WeatherForecast>;
                }
                @Math.Round(temp.Average(t => t.TemperatureF), 2)
            </GroupFooterTemplate>
        </GridColumn>
        <GridColumn CanFilter="true" Field="@nameof(WeatherForecast.Summary)" Priority="0" />
        <GridColumn Field="@nameof(WeatherForecast.Location)" Priority="5" />
    </GridColumns>
</BlazmGrid>

@code { 
    string filter ="";
    private WeatherForecast[] forecasts;
    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }
}
