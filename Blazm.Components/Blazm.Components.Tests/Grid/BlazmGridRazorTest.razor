@inherits TestComponentBase

@code
{
    class Data
    {
        [Display(Name = "Comes from attribute")]
        public string String { get; set; }
    }

    List<Data> TestData = new List<Data>
{
        new Data{String = "BAR"},
        new Data{String = "FOO"}
    };
}

<Fixture Test="Test1" Setup="fixture => fixture.Services.AddBlazm()" Description="Use diplay attribute to name column">
    <ComponentUnderTest>
        <BlazmGrid Data="TestData">
            <GridColumns>
                <GridColumn Field="@nameof(Data.String)" Title="Comes from attribute" />                
            </GridColumns>
        </BlazmGrid>
    </ComponentUnderTest>
    @code
    {
        void Test1(Fixture fixture)
        {
            var cut = fixture.GetComponentUnderTest();

            cut.Find("thead tr th").TextContent.Should().Be("Comes from attribute");
        }
    }
</Fixture>

<Fixture Test="Test2" Setup="fixture => fixture.Services.AddBlazm()"
         Description="Automatically generates columns if AutoGenerateColumns=true">
    <ComponentUnderTest>
        <BlazmGrid Data="TestData" AutoGenerateColumns="true"></BlazmGrid>
    </ComponentUnderTest>

    @code
    {
        void Test2(Fixture fixture)
        {
            var cut = fixture.GetComponentUnderTest();

            cut.Find("thead tr th")
                .TextContent
                .MarkupMatches(nameof(Data.String));
        }
    }
</Fixture>
