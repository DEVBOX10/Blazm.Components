@namespace Blazm.Components
@typeparam TItem

@if (((ContainerGrid.DetailTemplate != null && ContainerGrid.ShowDetails) || ContainerGrid.Columns.Any(c => c.Visible == false)) && ContainerGrid.ExpandedRows.Contains(Row.GetHashCode()))
{
    <tr>
        <td colspan="@ContainerGrid.VisibleColumns">
            @if (ContainerGrid.DetailTemplate != null && ContainerGrid.ShowDetails)
            {
                @ContainerGrid.DetailTemplate(Row)                
            }
            @if (ContainerGrid.Columns.Any(c => !c.Visible))
            {
                <dl>
                    @foreach (var hiddencolumn in ContainerGrid.Columns.Where(c => !c.Visible))
                    {
                        <dt>@hiddencolumn.Title</dt>
                        <dd>

                            @if (hiddencolumn.Template == null)
                            {
                                @if (hiddencolumn.Format == null)
                                {
                                    @Row.GetType().GetProperty(hiddencolumn.Field)?.GetValue(Row)
                                }
                                else
                                {
                                    @string.Format(hiddencolumn.Format, Row.GetType().GetProperty(hiddencolumn.Field)?.GetValue(Row))
                                }
                            }
                            else
                            {
                                @hiddencolumn.Template(Row)
                            }
                        </dd>
                    }
                </dl>
            }
            </td>
            </tr>
        }
@code {

    [Parameter]
    public TItem? Row { get; set; } = default!;
    [CascadingParameter]
    public BlazmGrid<TItem> ContainerGrid { get; set; } = default!;


}
